version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: apollo-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: apollo-api
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - apollo-network

  # Redis for Sessions and Caching
  redis:
    image: redis:7.2-alpine
    container_name: apollo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass yourredispassword
    volumes:
      - redis_data:/data
    networks:
      - apollo-network

  # Apollo GraphQL API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: apollo-api
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: mongodb://admin:password@mongodb:27017/apollo-api?authSource=admin
      REDIS_URL: redis://:yourredispassword@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-here
      CLIENT_URL: http://localhost:3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - apollo-network
    command: npm run dev

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: apollo-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - apollo-network

  # Redis Commander (Optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: apollo-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:yourredispassword
    depends_on:
      - redis
    networks:
      - apollo-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  apollo-network:
    driver: bridge
